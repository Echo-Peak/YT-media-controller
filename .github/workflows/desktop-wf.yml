name: Build Desktop Installer
on:
  repository_dispatch:
    types: [build-desktop]

permissions:
  contents: write

jobs:
  build-desktop-installer-asset:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Set version/tag variable
        run: |
          echo "TAG_VERSION=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV

      - name: Fetch external binaries
        run: node ./backend/scripts/installExternalDeps.js

      - name: Setup Node with Yarn cache
        uses: actions/setup-node@v4
        with:
          node-version: "22.12.0"
          cache: "yarn"

      - name: Install NPM modules
        run: yarn
        shell: bash

      - name: Restore NuGet packages
        run: |
          nuget restore ./backend/YTMediaControllerSrv/YTMediaControllerSrv.sln

      - name: Build backend service
        run:
          msbuild ./backend/YTMediaControllerSrv/YTMediaControllerSrv.sln
          /p:Configuration=Release

      - name: Build installer
        run: npm run package

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.TAG_VERSION}}
          release_name: Release ${{env.TAG_VERSION}}
          draft: ${{ github.ref_name != 'main' }}
          prerelease: false

      - name: Upload installer asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/YoutubeMediaControllerInstaller.exe
          asset_name: YoutubeMediaControllerInstaller.exe
          asset_content_type: application/octet-stream
